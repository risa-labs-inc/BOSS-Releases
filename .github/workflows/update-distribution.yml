name: Update Homebrew Distribution

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version to update (e.g., 8.11.3)'
        required: true
        type: string

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

jobs:
  update-homebrew:
    name: Update Homebrew Distribution
    runs-on: ubuntu-latest
    if: "!github.event.release.prerelease"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract release information
        id: release_info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual trigger - use input version
            VERSION="${{ github.event.inputs.version }}"
            RELEASE_URL="https://github.com/risa-labs-inc/BOSS-Releases/releases/tag/v${VERSION}"
            echo "🔧 Manual trigger for version: $VERSION"
          else
            # Release trigger - extract from tag
            VERSION="${GITHUB_REF#refs/tags/v}"
            RELEASE_URL="${{ github.event.release.html_url }}"
            echo "🚀 Release trigger for version: $VERSION"
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "RELEASE_URL=$RELEASE_URL" >> $GITHUB_OUTPUT
          echo "ASSET_NAME=BOSS-${VERSION}-Universal.dmg" >> $GITHUB_OUTPUT
          echo "DOWNLOAD_URL=https://github.com/risa-labs-inc/BOSS-Releases/releases/download/v${VERSION}/BOSS-${VERSION}-Universal.dmg" >> $GITHUB_OUTPUT
          echo "📦 Processing BOSS release $VERSION"

      - name: Calculate SHA256 hash for Homebrew
        id: calculate_hash
        run: |
          # Download the DMG file to calculate SHA256
          echo "⬇️ Downloading DMG to calculate SHA256..."
          curl -fsSL -o "BOSS-${{ steps.release_info.outputs.VERSION }}-Universal.dmg" \
            "${{ steps.release_info.outputs.DOWNLOAD_URL }}"
          
          # Calculate SHA256
          SHA256=$(sha256sum "BOSS-${{ steps.release_info.outputs.VERSION }}-Universal.dmg" | cut -d' ' -f1)
          echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
          echo "🔒 Calculated SHA256: $SHA256"
          
          # Clean up downloaded file
          rm -f "BOSS-${{ steps.release_info.outputs.VERSION }}-Universal.dmg"

      - name: Update Homebrew Tap
        id: update_tap
        run: |
          echo "🍺 Updating custom Homebrew tap..."
          
          # Clone the tap repository
          git clone https://${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/risa-labs-inc/homebrew.git homebrew-tap
          cd homebrew-tap
          
          # Configure git
          git config user.name "BOSS Release Bot"
          git config user.email "noreply@risa-labs.com"
          
          # Update the cask file
          VERSION="${{ steps.release_info.outputs.VERSION }}"
          SHA256="${{ steps.calculate_hash.outputs.SHA256 }}"
          
          # Update version and SHA256 in boss.rb
          sed -i "s/version \"[^\"]*\"/version \"$VERSION\"/" Casks/boss.rb
          sed -i "s/sha256 \"[^\"]*\"/sha256 \"$SHA256\"/" Casks/boss.rb
          
          # Verify changes
          echo "📝 Updated cask file content:"
          head -10 Casks/boss.rb
          
          # Commit and push changes if there are any
          git add Casks/boss.rb
          if git diff --staged --quiet; then
            echo "ℹ️ No changes to commit - tap already up to date"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            git commit -m "🚀 Update BOSS to version $VERSION

            Release: ${{ steps.release_info.outputs.RELEASE_URL }}
            SHA256: $SHA256"
            
            # Push with retry logic
            for i in {1..3}; do
              if git push; then
                echo "✅ Successfully pushed to tap repository"
                echo "success=true" >> $GITHUB_OUTPUT
                break
              else
                echo "❌ Push attempt $i failed, retrying in 5 seconds..."
                sleep 5
                git pull --rebase
              fi
            done
          fi

      - name: Setup Homebrew for official PR
        if: steps.update_tap.outputs.success == 'true'
        uses: Homebrew/actions/setup-homebrew@master

      - name: Create PR to official Homebrew
        if: steps.update_tap.outputs.success == 'true'
        id: create_pr
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.HOMEBREW_CASK_TOKEN }}
        run: |
          echo "🚀 Creating PR to official Homebrew repository..."
          
          # Check if token is available
          if [ -z "$HOMEBREW_GITHUB_API_TOKEN" ]; then
            echo "⚠️ HOMEBREW_CASK_TOKEN secret not configured"
            echo "Please add your GitHub token to repository secrets for official Homebrew PRs"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Verify cask exists first
          if ! brew info --cask boss >/dev/null 2>&1; then
            echo "⚠️ boss cask not found in official Homebrew"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Use brew bump-cask-pr with proper hash
          if brew bump-cask-pr boss \
            --version="${{ steps.release_info.outputs.VERSION }}" \
            --sha256="${{ steps.calculate_hash.outputs.SHA256 }}" \
            --no-browse; then
            echo "✅ Successfully created PR to homebrew-cask"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Failed to create PR to homebrew-cask"
            echo "Current boss cask version: $(brew info --cask boss | grep -E '^boss:' | head -1)"
            echo "success=false" >> $GITHUB_OUTPUT
            # Don't fail the entire workflow for Homebrew PR issues
          fi


      - name: Summary
        if: always()
        run: |
          echo "## 🍺 Homebrew Distribution Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Version**: ${{ steps.release_info.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Release**: ${{ steps.release_info.outputs.RELEASE_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🍺 Homebrew Distribution" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.update_tap.outputs.success }}" == "true" ]]; then
            echo "✅ **Custom Tap**: Updated successfully" >> $GITHUB_STEP_SUMMARY
            echo "   - SHA256: ${{ steps.calculate_hash.outputs.SHA256 }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Custom Tap**: Failed to update" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ steps.create_pr.outputs.success }}" == "true" ]]; then
            echo "✅ **Official Homebrew**: PR created successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Official Homebrew**: PR creation failed (tap still updated)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Linux Installation" >> $GITHUB_STEP_SUMMARY
          echo "For Linux users, download packages directly from:" >> $GITHUB_STEP_SUMMARY
          echo "https://github.com/risa-labs-inc/BOSS-Kotlin/releases/latest" >> $GITHUB_STEP_SUMMARY