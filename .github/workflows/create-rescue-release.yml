name: Create Rescue Release

on:
  workflow_dispatch:
    inputs:
      rescue_version:
        description: 'Rescue version tag (e.g., 8.9.99)'
        required: true
        type: string
      source_version:
        description: 'Source version to copy assets from (e.g., 8.11.4)'
        required: true
        type: string
      rescue_description:
        description: 'Custom description for why this rescue is needed'
        required: false
        type: string
        default: 'Universal rescue release for users stuck with version comparison bug'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-rescue-release:
    name: Create Rescue Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Validate inputs
        run: |
          echo "🔍 Validating inputs..."
          echo "Rescue Version: ${{ github.event.inputs.rescue_version }}"
          echo "Source Version: ${{ github.event.inputs.source_version }}"
          echo "Description: ${{ github.event.inputs.rescue_description }}"
          
          # Check if rescue version is valid
          if [[ ! "${{ github.event.inputs.rescue_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid rescue version format. Use semantic versioning (e.g., 8.9.99)"
            exit 1
          fi
          
          # Check if source version exists
          if ! gh release view "v${{ github.event.inputs.source_version }}" >/dev/null 2>&1; then
            echo "❌ Source version v${{ github.event.inputs.source_version }} does not exist"
            exit 1
          fi
          
          # Check if rescue version already exists
          if gh release view "v${{ github.event.inputs.rescue_version }}" >/dev/null 2>&1; then
            echo "❌ Rescue version v${{ github.event.inputs.rescue_version }} already exists"
            exit 1
          fi
          
          echo "✅ All validations passed"

      - name: Download source assets
        run: |
          echo "⬇️ Downloading assets from v${{ github.event.inputs.source_version }}..."
          
          # Create working directory
          mkdir -p rescue-assets
          cd rescue-assets
          
          # Download all assets from source version
          gh release download "v${{ github.event.inputs.source_version }}" --pattern "*"
          
          echo "📦 Downloaded assets:"
          ls -la

      - name: Rename assets for rescue version
        run: |
          echo "🏷️ Renaming assets to rescue version ${{ github.event.inputs.rescue_version }}..."
          cd rescue-assets
          
          SOURCE_VER="${{ github.event.inputs.source_version }}"
          RESCUE_VER="${{ github.event.inputs.rescue_version }}"
          
          # Rename all assets
          for file in BOSS-${SOURCE_VER}*; do
            if [[ -f "$file" ]]; then
              new_name="${file//${SOURCE_VER}/${RESCUE_VER}}"
              mv "$file" "$new_name"
              echo "  Renamed: $file → $new_name"
            fi
          done
          
          echo "📦 Rescue assets ready:"
          ls -la

      - name: Create rescue release
        run: |
          echo "🚀 Creating rescue release v${{ github.event.inputs.rescue_version }}..."
          
          SOURCE_VER="${{ github.event.inputs.source_version }}"
          RESCUE_VER="${{ github.event.inputs.rescue_version }}"
          DESCRIPTION="${{ github.event.inputs.rescue_description }}"
          
          # Create release notes
          cat > release_notes.md << 'EOF'
          # 🚀 BOSS ${{ github.event.inputs.rescue_version }} (Rescue Release)
          
          ## 🆘 This is a Special Rescue Release
          
          **Important**: This release is designed to help users stuck with the auto-update version comparison bug in BOSS versions < 8.11.4.
          
          ### What This Release Contains
          - **Actual Version**: ${{ github.event.inputs.source_version }} code and features
          - **Release Tag**: v${{ github.event.inputs.rescue_version }} (for compatibility with buggy version comparison)
          - **Purpose**: ${{ github.event.inputs.rescue_description }}
          
          ### Critical Fixes Included (from ${{ github.event.inputs.source_version }})
          - ✅ **Apple Silicon Crash Fix**: Resolves pthread_jit_write_protect_np crash
          - ✅ **Version Comparison Fix**: Restores proper auto-update functionality  
          - ✅ **PTY4J Compatibility**: Stable version for Apple Silicon support
          
          ### After Installing This Release
          Once you install ${{ github.event.inputs.rescue_version }}, your auto-update system will be fixed and you'll automatically receive future updates normally.
          
          ### For New Users
          If you're installing BOSS for the first time, please use the latest regular release instead of this rescue version.
          
          ---
          
          ## 📦 Downloads
          
          Choose the appropriate package for your platform:
          
          - **macOS**: `BOSS-${{ github.event.inputs.rescue_version }}-Universal.dmg` (Apple Silicon & Intel)
          - **Windows**: `BOSS-${{ github.event.inputs.rescue_version }}.msi` (x64)  
          - **Linux DEB**: `BOSS-${{ github.event.inputs.rescue_version }}.deb` (Ubuntu/Debian)
          - **Linux RPM**: `BOSS-${{ github.event.inputs.rescue_version }}.rpm` (RHEL/Fedora/openSUSE)
          - **Linux JAR**: `BOSS-${{ github.event.inputs.rescue_version }}.jar` (Universal Linux)
          
          ## 🛠️ Installation
          
          Follow the same installation process as any BOSS release. See the [main README](https://github.com/risa-labs-inc/BOSS-Releases/blob/main/README.md) for detailed instructions.
          
          ---
          
          🤖 *This rescue release enables users to escape the version comparison bug and receive future updates normally*
          
          **Source Version**: v${{ github.event.inputs.source_version }}  
          **Created**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
          **Automated by**: GitHub Actions
          EOF
          
          # Create the release
          gh release create "v${{ github.event.inputs.rescue_version }}" \
            --title "🚀 BOSS ${{ github.event.inputs.rescue_version }} (Rescue Release)" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload rescue assets
        run: |
          echo "📤 Uploading rescue assets..."
          cd rescue-assets
          
          # Upload all assets to the rescue release
          for file in BOSS-${{ github.event.inputs.rescue_version }}*; do
            if [[ -f "$file" ]]; then
              echo "  Uploading: $file"
              gh release upload "v${{ github.event.inputs.rescue_version }}" "$file" --clobber
            fi
          done
          
          echo "✅ All assets uploaded successfully"

      - name: Summary
        run: |
          echo "## 🆘 Rescue Release Created Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Rescue Version**: v${{ github.event.inputs.rescue_version }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Source Version**: v${{ github.event.inputs.source_version }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Release URL**: https://github.com/risa-labs-inc/BOSS-Releases/releases/tag/v${{ github.event.inputs.rescue_version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Assets Uploaded" >> $GITHUB_STEP_SUMMARY
          echo "- BOSS-${{ github.event.inputs.rescue_version }}-Universal.dmg" >> $GITHUB_STEP_SUMMARY
          echo "- BOSS-${{ github.event.inputs.rescue_version }}.deb" >> $GITHUB_STEP_SUMMARY
          echo "- BOSS-${{ github.event.inputs.rescue_version }}.jar" >> $GITHUB_STEP_SUMMARY
          echo "- BOSS-${{ github.event.inputs.rescue_version }}.msi" >> $GITHUB_STEP_SUMMARY
          echo "- BOSS-${{ github.event.inputs.rescue_version }}.rpm" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Purpose" >> $GITHUB_STEP_SUMMARY
          echo "${{ github.event.inputs.rescue_description }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Users stuck on older versions can now update to this rescue release to escape the version comparison bug!" >> $GITHUB_STEP_SUMMARY